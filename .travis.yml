language: cpp
addons:
  apt:
    packages:
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - libfftw3-dev
      env: COMPILER=gcc GCC=4.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - libfftw3-dev
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libfftw3-dev
      env: COMPILER=gcc GCC=6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libfftw3-dev
      env: COMPILER=gcc GCC=7
    - os: linux
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - libfftw3-dev
      env: COMPILER=clang CLANG=3.6
    - os: linux
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
            - libfftw3-dev
      env: COMPILER=clang CLANG=3.7
    - os: linux
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - libfftw3-dev
      env: COMPILER=clang CLANG=3.8
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libc++-dev
            - libfftw3-dev
      env: COMPILER=clang CLANG=3.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libc++-dev
            - libfftw3-dev
      env: COMPILER=clang CLANG=4.0
    - os: osx
      osx_image: xcode8
      compiler: clang
    - os: osx
      osx_image: xcode8.3
      compiler: clang
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang;
      fi
install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda update -yq conda
    - conda install -y gtest cmake #xtensor -c conda-forge
    - |
      # install xtensor (and fftw on osx); if conda fails, use xtensor from source
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        conda install -y xtensor fftw -c conda-forge
      elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if ! conda install -y xtensor -c conda-forge; then
          echo "Installing xtensor from source"
          cd $TRAVIS_HOME
          git clone https://github.com/QuantStack/xtensor.git
          cd xtensor
          cmake .
          make install
          cd $TRAVIS_BUILD_DIR
        fi
      fi
    # Testing
    - mkdir $TRAVIS_BUILD_DIR/build
    - cd $TRAVIS_BUILD_DIR/build
#    - if [[ "$BOUND_CHECKS" == 1 ]]; then
#        cmake -DXTENSOR_ENABLE_ASSERT=ON -DDOWNLOAD_GTEST=ON ..;
#      else
#        cmake -DBUILD_TESTS=ON ..;
#      fi
    - cmake -DBUILD_TESTS=ON ..
    - make -j2 test_xtensor-fftw
    - cd test
script:
    - ./test_xtensor-fftw
